//@version=5
indicator("Piv Indicator", overlay=false)

// Define the high, low, and close of the previous 3 days (excluding today)
prevHigh = request.security(syminfo.tickerid, "D", high[1])  // High of the previous day
prevHigh2 = request.security(syminfo.tickerid, "D", high[2]) // High of the day before previous
prevHigh3 = request.security(syminfo.tickerid, "D", high[3]) // High of 3 days ago
prevLow = request.security(syminfo.tickerid, "D", low[1])    // Low of the previous day
prevLow2 = request.security(syminfo.tickerid, "D", low[2])   // Low of the day before previous
prevLow3 = request.security(syminfo.tickerid, "D", low[3])   // Low of 3 days ago
prevClose = request.security(syminfo.tickerid, "D", close[1]) // Close of the previous day

// Calculate the highest high and lowest low of the previous 3 days
highestHigh = math.max(prevHigh, math.max(prevHigh2, prevHigh3))  // Highest high from the last 3 days
lowestLow = math.min(prevLow, math.min(prevLow2, prevLow3))       // Lowest low from the last 3 days

// Calculate A, B, and d
A = (highestHigh + lowestLow + prevClose) / 3
B = (highestHigh + lowestLow) / 2
d = math.abs(A - B)

// Define the three levels
levelUp = A + d
level = A
levelDown = A - d

// Time condition: Don't plot if time is before current time - 10 hours (10 hours = 10 * 60 * 60 = 36,000 seconds)
timeCondition = (time >= (timestamp("America/New_York", year, month, dayofmonth, hour, minute) - 10 * 60 * 60 * 1000))


// Plot the levels with dashed or dotted lines based on the condition
plot(timeCondition ? levelUp : na, color=color.green, linewidth=1, title="Level Up", style=plot.style_steplinebr)
plot(timeCondition ? level : na, color=color.blue, linewidth=1, title="Level", style=plot.style_steplinebr)
plot(timeCondition ? levelDown : na, color=color.red, linewidth=1, title="Level Down", style=plot.style_steplinebr)
